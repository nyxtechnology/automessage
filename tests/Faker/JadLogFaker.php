<?php


namespace Tests\Faker;

use Illuminate\Foundation\Testing\WithFaker;
use Illuminate\Support\Facades\Config;

class JadLogFaker
{
    use WithFaker;
    protected $msg;
    protected $faker;

    public function __construct()
    {
        $this->faker = $this->faker('pt_BR');
        $this->msg = new \stdClass();
    }

    public function orderFaker(array $value = [])
    {
        $this->msg->event = isset($value['event']) ? $value['event'] : 'createOrder';
        $this->msg->webhook = isset($value['webhook']) ? $value['webhook'] : 'https://webhook.site/fb3e10f8-66b7-4f15-9c8e-baec66e0f9ff';
        $rem = new \stdClass();
        $rem->nome = $this->faker->name;
        $rem->cnpjCpf = 00000000000000;
        $rem->endereco = $this->faker->streetAddress;
        $rem->numero = $this->faker->numberBetween(10, 100);
        $rem->bairro = $this->faker->sentence(2,  true);
        $rem->cidade = $this->faker->city;
        $rem->uf = 'SP';
        $rem->cep = '05060000';
        $rem->fone = '11 99999999';
        $rem->cel = '11 999999999';
        $rem->email = $this->faker->email;
        $rem->contato = 'NOME CONTATO';
        $des = new \stdClass();
        $des->nome = 'NOME DO APOIADOR';
        $des->cnpjCpf = '00000000000000';
        $des->endereco = 'RUA DO DESTINATARIO';
        $des->numero = '321';
        $des->bairro = $this->faker->sentence(2,  true);
        $des->cidade = $this->faker->city;
        $des->uf = 'SP';
        $des->cep = '03176060';
        $des->fone = '11 99999999';
        $des->cel = '11 999999999';
        $des->email = $this->faker->email;
        $des->contato = 'NOME CONTATO';
        $dfe = new \stdClass();
        $dfe->cfop = 6909;
        $dfe->danfeCte = 00000000000000000000000000000000000000000000;
        $dfe->nrDoc = 00000000;
        $dfe->serie = 0;
        $dfe->tpDocumento = 0;
        $dfe->valor = 38;
        $vol = new \stdClass();
        $vol->altura = 21;
        $vol->largura = 20;
        $vol->comprimento = 21;
        $vol->peso = 2.9;
        $vol->identificador = $this->faker->numberBetween(5000, 900000);
        $this->msg->metadata =
            [
                'conteudo' => isset($value['conteudo']) ? $value['conteudo'] : $this->faker->sentence(5,  true),
                'pedido' => isset($value['pedido']) ? $value['pedido'] : [$this->faker->numberBetween(5000, 900000)],
                'totPeso' => isset($value['totPeso']) ? $value['totPeso'] : 2.9,
                'totValor' => isset($value['totValor']) ? $value['totValor'] : 38,
                'modalidade' => isset($value['modalidade']) ? $value['modalidade'] : $this->faker->randomElement([0, 3, 9]),
                'contaCorrente' => Config::get('jadLog.checking_account'),
                'tpColeta' => 'K',
                'tipoFrete' => 0,
                'nrContrato' => Config::get('jadLog.checking_account'),
                'servico' => 1,
                'volume' => [$vol],
                'dfe'=> [$dfe],
                'rem' => $rem,
                'des' => $des,
            ];
    }

    public function deleteOrderFaker(array $value = [])
    {
        $this->msg->event = isset($value['event']) ? $value['event'] : 'deleteOrder';
        $this->msg->webhook = isset($value['webhook']) ? $value['webhook'] : 'https://webhook.site/fb3e10f8-66b7-4f15-9c8e-baec66e0f9ff';
        $this->msg->metadata = ['shipmentId' => isset($value['shipmentId']) ? $value['shipmentId'] : '07881800000030'];
    }

    public function trackingOrderFaker(array $value = [])
    {
        $this->msg->event = isset($value['event']) ? $value['event'] : 'trackingOrder';
        $this->msg->webhook = isset($value['webhook']) ? $value['webhook'] : 'https://webhook.site/fb3e10f8-66b7-4f15-9c8e-baec66e0f9ff';
        $shipment = new \stdClass();
        $shipment->shipmentId = isset($value['shipmentId']) ? $value['shipmentId'] : '07881800000030';
        $this->msg->metadata = [
            'consulta' => [
                $shipment
            ]
	    ];
    }

    public function jsonSerialize()
    {
        return json_encode($this->msg); // TODO: Change the autogenerated stub
    }

    public function getMessage()
    {
        return $this->msg;
    }

    public function getEmail()
    {
        return $this->faker('pt_BR')->email;
    }
}
